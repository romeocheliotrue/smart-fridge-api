---
openapi: 3.0.3
info:
  title: Smart Fridge API (Final)
  description: >
    –≠—Ç–æ API –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ —É–º–Ω–æ–≥–æ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞. –û–Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å
    –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ –∏ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚Äî
    –ø—Ä—è–º–æ –∫–∞–∫ —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.


    ## üîß –§—É–Ω–∫—Ü–∏–∏ API (–¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞)


    ### üö™ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–µ—Ä—å—é

    - –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞.

    - –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ—Ç—Å—è —Å–≤–µ—Ç.


    ### üí° –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π

    - –í—ã –º–æ–∂–µ—Ç–µ –≤—Ä—É—á–Ω—É—é –≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –≤–Ω—É—Ç—Ä–∏.

    - –°–≤–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –¥–≤–µ—Ä–∏.


    ### üßä –ú–æ—Ä–æ–∑–∏–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞ –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã

    - –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –≤–∫–ª—é—á–∞—è –º–æ—Ä–æ–∑–∏–ª—å–Ω—É—é –∫–∞–º–µ—Ä—É.

    - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –º–æ—Ä–æ–∑–∏–ª–∫–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º —É—Ä–æ–≤–Ω–µ.


    ### üîÑ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤

    - –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ—Å—Ç–∞–≤–∏—Ç—å —è—â–∏–∫ —Å –æ–≤–æ—â–∞–º–∏ —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö).

    - –≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–µ –∏–ª–∏ —É–±–æ—Ä–∫–µ.


    ### üå° –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π

    - –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω—è—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É:
      - –¥–ª—è –≤—Å–µ–≥–æ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞
      - –¥–ª—è –º–æ—Ä–æ–∑–∏–ª—å–Ω–æ–π –∫–∞–º–µ—Ä—ã
      - –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    - –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π.


    ### ü•ï –ü—Ä–æ–¥—É–∫—Ç—ã (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ)

    - –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–∏—Ü—Ü—É –≤ –º–æ—Ä–æ–∑–∏–ª–∫—É).

    - –ò–∑–º–µ–Ω—è—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ—Ä–∫–æ–≤–∏).

    - –£–ø–æ—Ç—Ä–µ–±–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç ‚Äî —Å–∏—Å—Ç–µ–º–∞ —É–º–µ–Ω—å—à–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–ª–∏ —É–¥–∞–ª–∏—Ç –µ–≥–æ.

    - –ü–æ–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –∫–∞–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π –≤—Ä—É—á–Ω—É—é.

    - –ü–µ—Ä–µ–º–µ—â–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏.

    - –ü–æ–ª—É—á–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∏ –±–ª–∏–∑–∫–∏—Ö –∫ –ø—Ä–æ—Å—Ä–æ—á–∫–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤.


    ### üì¶ –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

    - –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∑–∞ –æ–¥–∏–Ω —Ä–∞–∑ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ –ø–æ—Ö–æ–¥–∞ –≤ –º–∞–≥–∞–∑–∏–Ω).


    ### üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

    - –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç –≤–∞—Å –æ:
      - –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö
      - —Å–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ
      - –æ—Ç–∫—Ä—ã—Ç–æ–π –¥–≤–µ—Ä–∏
      - —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞

    ### üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (Prometheus)

    - –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.

    - –î–æ—Å—Ç—É–ø–Ω—ã –º–µ—Ç—Ä–∏–∫–∏: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã—Ç–∏–π –¥–≤–µ—Ä–∏, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, —Å—Ä–æ–∫–∏ –≥–æ–¥–Ω–æ—Å—Ç–∏.


    ### üîÅ –°–æ–±—ã—Ç–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

    - –ß–µ—Ä–µ–∑ WebSocket –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–æ–±—ã—Ç–∏—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ:
      - –¥–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞
      - –ø—Ä–æ–¥—É–∫—Ç —É–ø–æ—Ç—Ä–µ–±–ª—ë–Ω
      - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
      - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–º–µ—â—ë–Ω
  version: 1.4.1
  contact:
    name: Smart Fridge Team
    email: api@smartfridge.com
    url: https://smartfridge.com
license:
  name: MIT
  url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.fridge.com/v1
    description: –ü—Ä–æ–¥–∞–∫—à–µ–Ω
  - url: http://localhost:8080/v1
    description: –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
tags:
  - name: Doors
    description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–µ—Ä—å—é —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞
  - name: Light
    description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –æ—Å–≤–µ—â–µ–Ω–∏–µ–º
  - name: Containers
    description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ (–æ—Ç–¥–µ–ª–µ–Ω–∏—è–º–∏)
  - name: Temperature
    description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π
  - name: Products
    description: –ü—Ä–æ–¥—É–∫—Ç—ã (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ)
  - name: Easy Access
    description: –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–¥—É–∫—Ç–∞–º
  - name: Notifications
    description: –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  - name: Events
    description: WebSocket-—Å–æ–±—ã—Ç–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
  - name: Metrics
    description: –ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è Prometheus
components:
  schemas:
    Door:
      type: object
      properties:
        id:
          type: string
          example: door-main
        status:
          type: string
          enum:
            - open
            - closed
          example: closed
        timestamp:
          type: string
          format: date-time
          example: 2025-04-05T10:00:00Z
        light_triggered:
          type: boolean
          example: true
        _links:
          $ref: "#/components/schemas/HALLinks"
    Light:
      type: object
      properties:
        status:
          type: string
          enum:
            - on
            - off
          example: off
        triggered_by:
          type: string
          enum:
            - door_open
            - manual
          example: door_open
        timestamp:
          type: string
          format: date-time
          example: 2025-04-05T10:00:00Z
        _links:
          $ref: "#/components/schemas/HALLinks"
    Container:
      type: object
      properties:
        id:
          type: string
          example: container-veg
        type:
          type: string
          enum:
            - vegetables
            - dairy
            - general
            - freezer
          example: vegetables
        location:
          type: string
          enum:
            - top
            - middle
            - bottom
            - left
            - right
            - top-left
            - top-right
            - middle-left
            - middle-right
            - bottom-left
            - bottom-right
          example: bottom-left
        access_level:
          type: string
          enum:
            - easy
            - normal
          example: easy
        temperature_celsius:
          type: number
          format: float
          example: 4
        capacity_liters:
          type: integer
          example: 30
        is_active:
          type: boolean
          example: true
        products_count:
          type: integer
          example: 5
        _links:
          $ref: "#/components/schemas/HALLinks"
    Product:
      type: object
      properties:
        id:
          type: string
          example: product-pizza-01
        name:
          type: string
          example: –ü–∏—Ü—Ü–∞ "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞"
        category:
          type: string
          enum:
            - vegetables
            - dairy
            - meat
            - frozen
            - general
          example: frozen
        quantity:
          type: integer
          example: 1
        expiry_date:
          type: string
          format: date
          example: 2025-10-01
        container_id:
          type: string
          example: container-freezer
        storage_type:
          type: string
          enum:
            - fresh
            - frozen
          example: frozen
        is_expired:
          type: boolean
          example: false
        _links:
          $ref: "#/components/schemas/HALLinks"
    Notification:
      type: object
      properties:
        id:
          type: string
          example: notif-move-001
        type:
          type: string
          enum:
            - expiry_warning
            - temperature_alert
            - door_left_open
            - product_consumed
            - product_expired
            - container_moved
          example: container_moved
        message:
          type: string
          example: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä '–û–≤–æ—â–∏' –ø–µ—Ä–µ–º–µ—â—ë–Ω –≤ –ø–æ–ª–æ–∂–µ–Ω–∏–µ 'middle-right'
        severity:
          type: string
          enum:
            - low
            - medium
            - high
          example: low
        timestamp:
          type: string
          format: date-time
          example: 2025-04-05T11:30:00Z
        _links:
          $ref: "#/components/schemas/HALLinks"
    HALLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              example: /containers/container-veg
        collection:
          type: object
          properties:
            href:
              type: string
              example: /containers
        products:
          type: object
          properties:
            href:
              type: string
              example: /products?container_id=container-veg
        move:
          type: object
          properties:
            href:
              type: string
              example: /containers/container-veg/move
        temperature:
          type: object
          properties:
            href:
              type: string
              example: /temperature?target=container&container_id=container-veg
    MetricsResponse:
      type: string
      example: |
        # HELP fridge_door_open_total –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã—Ç–∏–π –¥–≤–µ—Ä–∏
        # TYPE fridge_door_open_total counter
        fridge_door_open_total 42

        # HELP fridge_temperature_celsius –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ –∑–æ–Ω–∞–º
        # TYPE fridge_temperature_celsius gauge
        fridge_temperature_celsius{zone="main"} 4.2
        fridge_temperature_celsius{zone="freezer"} -18.0

        # HELP product_expiry_days –û—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏ –¥–æ –ø—Ä–æ—Å—Ä–æ—á–∫–∏
        # TYPE product_expiry_days gauge
        product_expiry_days{product="–ü–∏—Ü—Ü–∞ \"–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞\""} 168

        # HELP expired_products_total –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        # TYPE expired_products_total gauge
        expired_products_total 1

        # HELP freezer_power_state –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ—Ä–æ–∑–∏–ª–∫–∏ (1=–≤–∫–ª—é—á–µ–Ω–∞)
        # TYPE freezer_power_state gauge
        freezer_power_state 1

        # HELP container_moves_total –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        # TYPE container_moves_total counter
        container_moves_total 3
    MoveContainerRequest:
      type: object
      properties:
        new_location:
          type: string
          enum:
            - top
            - middle
            - bottom
            - left
            - right
            - top-left
            - top-right
            - middle-left
            - middle-right
            - bottom-left
            - bottom-right
          example: middle-right
      required:
        - new_location
      example:
        new_location: middle-right
    ProductsFromThePackageRequest:
      type: array
      items:
        $ref: "#/components/schemas/Product"
      example:
        - name: –ú–æ–ª–æ–∫–æ
          category: dairy
          quantity: 1
          expiry_date: 2025-04-07
          container_id: container-dairy
        - name: –Ø–π—Ü–∞
          category: dairy
          quantity: 10
          expiry_date: 2025-04-15
          container_id: container-dairy
    MoveProductRequest:
      type: object
      properties:
        target_container_id:
          type: string
          example: container-veg
      required:
        - target_container_id
      example:
        target_container_id: container-veg
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: –ü–æ–ª–µ 'quantity' –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º
        status:
          type: integer
          example: 400
        timestamp:
          type: string
          format: date-time
          example: 2025-04-05T11:00:00Z
        path:
          type: string
          example: /products/product-carrot-01
        details:
          type: object
          additionalProperties: true
          example:
            field: quantity
            value: -1
            constraint: must be >= 0
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  security:
    - BearerAuth: []
    - ApiKeyAuth: []
  responses:
    Success200:
      description: –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/Door"
              - $ref: "#/components/schemas/Light"
              - $ref: "#/components/schemas/Container"
              - $ref: "#/components/schemas/Product"
              - $ref: "#/components/schemas/Notification"
    Created201:
      description: –†–µ—Å—É—Ä—Å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/Product"
              - $ref: "#/components/schemas/Notification"
    NoContent204:
      description: –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
      content: {}
    BadRequest400:
      description: –ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: Bad Request
            message: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            status: 400
            path: /doors
    Unauthorized401:
      description: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: Unauthorized
            message: –¢—Ä–µ–±—É–µ—Ç—Å—è JWT —Ç–æ–∫–µ–Ω –∏–ª–∏ API-–∫–ª—é—á
            status: 401
            path: /doors
    Forbidden403:
      description: –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: Forbidden
            message: –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
            status: 403
            path: /temperature
    NotFound404:
      description: –†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: Not Found
            message: –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
            status: 404
            path: /containers/container-999
    MethodNotAllowed405:
      description: –ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: Method Not Allowed
            message: –ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è —ç—Ç–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
            status: 405
            path: /products
    Conflict409:
      description: –ö–æ–Ω—Ñ–ª–∏–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: Conflict
            message: –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∏–∑-–∑–∞ –µ–≥–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
            status: 409
            path: /containers/container-veg/move
    UnprocessableEntity422:
      description: –î–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: Unprocessable Entity
            message: –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
            status: 422
            path: /containers/container-veg/move
            details:
              field: new_location
              value: ceiling
              constraint: "must be one of: top, middle, bottom, ..."
    InternalServerError500:
      description: –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: Internal Server Error
            message: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            status: 500
            path: /containers/container-veg/move
  requestBodies:
    MoveContainer:
      description: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MoveContainerRequest"
paths:
  /doors:
    put:
      tags:
        - Doors
      summary: –û—Ç–∫—Ä—ã—Ç—å –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                    - open
                    - close
                  example: close
              required:
                - action
      responses:
        "200":
          $ref: "#/components/responses/Success200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "500":
          $ref: "#/components/responses/InternalServerError500"
  /light:
    get:
      tags:
        - Light
      summary: –ü–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–≤–µ—Ç–∞
      responses:
        "200":
          $ref: "#/components/responses/Success200"
        "500":
          $ref: "#/components/responses/InternalServerError500"
    put:
      tags:
        - Light
      summary: –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –≤—Ä—É—á–Ω—É—é
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - on
                    - off
                  example: off
              required:
                - status
      responses:
        "200":
          $ref: "#/components/responses/Success200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "401":
          $ref: "#/components/responses/Unauthorized401"
        "500":
          $ref: "#/components/responses/InternalServerError500"
  /containers:
    get:
      tags:
        - Containers
      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
      responses:
        "200":
          description: –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Container"
  "/containers/{id}":
    get:
      tags:
        - Containers
      summary: –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: container-veg
      responses:
        "200":
          $ref: "#/components/responses/Success200"
        "404":
          $ref: "#/components/responses/NotFound404"
        "500":
          $ref: "#/components/responses/InternalServerError500"
    patch:
      tags:
        - Containers
      summary: –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–∏–ø –∏–ª–∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Container"
            example:
              type: vegetables
              access_level: easy
      responses:
        "200":
          $ref: "#/components/responses/Success200"
        "400":
          description: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                error: Bad Request
                message: "–ü–æ–ª–µ 'type' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑: vegetables, dairy, general, freezer"
                status: 400
                path: /containers/container-veg
                details:
                  field: type
                  value: unknown
                  constraint: "must be one of: vegetables, dairy, general, freezer"
        "404":
          $ref: "#/components/responses/NotFound404"
        "500":
          $ref: "#/components/responses/InternalServerError500"
  "/containers/{id}/move":
    post:
      tags:
        - Containers
      summary: –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
      description: >
        –ü–æ–∑–≤–æ–ª—è–µ—Ç —É–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ
        –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏).

        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏–µ `container_moved`.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: container-veg
      requestBody:
        $ref: "#/components/requestBodies/MoveContainer"
      responses:
        "200":
          description: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–º–µ—â—ë–Ω
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Container"
              example:
                id: container-veg
                type: vegetables
                location: middle-right
                access_level: easy
                _links:
                  self:
                    href: /containers/container-veg
                  move:
                    href: /containers/container-veg/move
        "400":
          $ref: "#/components/responses/BadRequest400"
        "404":
          $ref: "#/components/responses/NotFound404"
        "409":
          description: –ö–æ–Ω—Ñ–ª–∏–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                error: Conflict
                message: –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–æ–π –¥–≤–µ—Ä–∏
                status: 409
                path: /containers/container-veg/move
        "422":
          $ref: "#/components/responses/UnprocessableEntity422"
        "500":
          $ref: "#/components/responses/InternalServerError500"
  /products:
    get:
      tags:
        - Products
      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã
      responses:
        "200":
          $ref: "#/components/responses/Success200"
    post:
      tags:
        - Products
      summary: –î–æ–±–∞–≤–∏—Ç—å –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/Product"
                - $ref: "#/components/schemas/ProductsFromThePackageRequest"
      responses:
        "201":
          $ref: "#/components/responses/Created201"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "500":
          $ref: "#/components/responses/InternalServerError500"
  /products/expired:
    get:
      tags:
        - Products
      summary: –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
      responses:
        "200":
          $ref: "#/components/responses/Success200"
  /products/near-expiry:
    get:
      tags:
        - Products
      summary: –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã, –±–ª–∏–∑–∫–∏–µ –∫ –ø—Ä–æ—Å—Ä–æ—á–∫–µ
      parameters:
        - name: days
          in: query
          schema:
            type: integer
            minimum: 1
            default: 3
          description: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞
      responses:
        "200":
          $ref: "#/components/responses/Success200"
  "/products/{id}":
    patch:
      tags:
        - Products
      summary: –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  minimum: 0
                  example: 2
              required:
                - quantity
      responses:
        "200":
          $ref: "#/components/responses/Success200"
        "400":
          $ref: "#/components/responses/BadRequest400"
        "404":
          $ref: "#/components/responses/NotFound404"
        "500":
          $ref: "#/components/responses/InternalServerError500"
    delete:
      tags:
        - Products
      summary: –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          $ref: "#/components/responses/NoContent204"
        "404":
          $ref: "#/components/responses/NotFound404"
        "500":
          $ref: "#/components/responses/InternalServerError500"
  "/products/{id}/consume":
    post:
      tags:
        - Products
      summary: –£–ø–æ—Ç—Ä–µ–±–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç (—É–º–µ–Ω—å—à–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–ª–∏ —É–¥–∞–ª—è–µ—Ç)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–º–µ–Ω—å—à–µ–Ω–æ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "204":
          description: –ü—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª—ë–Ω
          content: {}
        "404":
          $ref: "#/components/responses/NotFound404"
        "500":
          $ref: "#/components/responses/InternalServerError500"
  "/products/{id}/expire":
    post:
      tags:
        - Products
      summary: –ü–æ–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –∫–∞–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: –ü—Ä–æ–¥—É–∫—Ç –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          $ref: "#/components/responses/NotFound404"
        "500":
          $ref: "#/components/responses/InternalServerError500"
  "/products/{id}/move":
    patch:
      tags:
        - Products
      summary: –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –≤ –¥—Ä—É–≥–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoveProductRequest"
      responses:
        "200":
          description: –ü—Ä–æ–¥—É–∫—Ç –ø–µ—Ä–µ–º–µ—â—ë–Ω
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          $ref: "#/components/responses/NotFound404"
        "500":
          $ref: "#/components/responses/InternalServerError500"
  /temperature:
    put:
      tags:
        - Temperature
      summary: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
                  enum:
                    - main
                    - freezer
                    - container
                  example: freezer
                container_id:
                  type: string
                  nullable: true
                  example: container-freezer
                value_celsius:
                  type: number
                  format: float
                  example: -18.5
              required:
                - target
                - value_celsius
            example:
              target: freezer
              value_celsius: -18.5
      responses:
        "200":
          description: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
          content:
            application/json:
              example:
                status: success
                message: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è freezer —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ -18.5¬∞C
                timestamp: 2025-04-05T10:20:00Z
        "400":
          $ref: "#/components/responses/BadRequest400"
        "409":
          $ref: "#/components/responses/Conflict409"
        "500":
          $ref: "#/components/responses/InternalServerError500"
  /events:
    get:
      tags:
        - Events
      summary: –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WebSocket –¥–ª—è —Å–æ–±—ã—Ç–∏–π
      description: |
        –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ `wss://api.fridge.com/v1/events`

        –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–æ–±—ã—Ç–∏—è:
        - `door_opened`
        - `door_closed`
        - `temperature_changed`
        - `product_added`
        - `product_consumed`
        - `product_expired`
        - `container_moved`
        - `expiry_warning`

        –ü—Ä–∏–º–µ—Ä:
        ```json
        {
          "event": "container_moved",
          "data": {
            "container_id": "container-veg",
            "old_location": "bottom-left",
            "new_location": "middle-right",
            "timestamp": "2025-04-05T11:30:00Z"
          }
        }
        ```
      responses:
        "101":
          description: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ WebSocket
        "401":
          $ref: "#/components/responses/Unauthorized401"
  /metrics:
    get:
      tags:
        - Metrics
      summary: –ü–æ–ª—É—á–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è Prometheus
      responses:
        "200":
          description: –ú–µ—Ç—Ä–∏–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Prometheus
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/MetricsResponse"
        "500":
          $ref: "#/components/responses/InternalServerError500"






