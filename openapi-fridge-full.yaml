openapi: 3.0.3
info:
  title: Smart Fridge API (Full)
  description: |
    –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ RESTful + WebSocket API –¥–ª—è —É–º–Ω–æ–≥–æ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ —Å –º–æ—Ä–æ–∑–∏–ª—å–Ω–æ–π –∫–∞–º–µ—Ä–æ–π, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π, —Å–æ–±—ã—Ç–∏—è–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏ Prometheus.

    ## üîß –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–µ—Ä—å—é, —Å–≤–µ—Ç–æ–º, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏
    - –ú–æ—Ä–æ–∑–∏–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞ —Å –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π
    - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–≤–∫–ª—é—á–∞—è –ø–∏—Ü—Ü—É!)
    - –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –¥–ª—è –∑–æ–Ω –∏ –≤—Å–µ–≥–æ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞
    - WebSocket-—Å–æ–±—ã—Ç–∏—è: `door_opened`, `temperature_changed`
    - –≠–Ω–¥–ø–æ–∏–Ω—Ç `/metrics` –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ Prometheus

    ## üìä –ú–µ—Ç—Ä–∏–∫–∏:
    - `fridge_door_open_total` ‚Äî —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –æ—Ç–∫—Ä—ã–≤–∞–ª–∏
    - `fridge_temperature_celsius` ‚Äî —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ –∑–æ–Ω–∞–º
    - `product_expiry_days` ‚Äî —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –ø—Ä–æ—Å—Ä–æ—á–∫–∏
    - `freezer_power_state` ‚Äî –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –º–æ—Ä–æ–∑–∏–ª–∫–∞

  version: 1.1.0
  contact:
    name: Smart Fridge Team
    email: api@smartfridge.com
    url: https://smartfridge.com

license:
  name: MIT
  url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.fridge.com/v1
    description: –ü—Ä–æ–¥–∞–∫—à–µ–Ω
  - url: http://localhost:8080/v1
    description: –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä

tags:
  - name: Doors
    description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–µ—Ä—å—é
  - name: Light
    description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π
  - name: Containers
    description: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –∑–æ–Ω—ã (–≤–∫–ª—é—á–∞—è –º–æ—Ä–æ–∑–∏–ª–∫—É)
  - name: Temperature
    description: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π
  - name: Products
    description: –ü—Ä–æ–¥—É–∫—Ç—ã: –æ–≤–æ—â–∏, –º–æ–ª–æ–∫–æ, –ø–∏—Ü—Ü–∞ –∏ —Ç.–¥.
  - name: Easy Access
    description: –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–¥—É–∫—Ç–∞–º
  - name: Notifications
    description: –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  - name: Events
    description: WebSocket-—Å–æ–±—ã—Ç–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
  - name: Metrics
    description: –ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è Prometheus

components:
  # --- –°–•–ï–ú–´ ---
  schemas:
    Door:
      type: object
      properties:
        id:
          type: string
          example: door-main
        status:
          type: string
          enum: [open, closed]
          example: closed
        timestamp:
          type: string
          format: date-time
          example: "2025-04-05T10:00:00Z"
        light_triggered:
          type: boolean
          example: true
        _links:
          $ref: '#/components/schemas/HALLinks'

    Light:
      type: object
      properties:
        status:
          type: string
          enum: [on, off]
          example: off
        triggered_by:
          type: string
          enum: [door_open, manual]
          example: door_open
        timestamp:
          type: string
          format: date-time
          example: "2025-04-05T10:00:00Z"
        _links:
          $ref: '#/components/schemas/HALLinks'

    Container:
      type: object
      properties:
        id:
          type: string
          example: container-freezer
        type:
          type: string
          enum: [vegetables, dairy, general, freezer]
          example: freezer
        location:
          type: string
          example: bottom
        access_level:
          type: string
          enum: [easy, normal]
          example: normal
        temperature_celsius:
          type: number
          format: float
          example: -18.0
          description: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –¶–µ–ª—å—Å–∏—è
        capacity_liters:
          type: integer
          example: 50
        is_active:
          type: boolean
          example: true
        products_count:
          type: integer
          example: 3
        _links:
          $ref: '#/components/schemas/HALLinks'

    Product:
      type: object
      properties:
        id:
          type: string
          example: product-pizza-01
        name:
          type: string
          example: –ü–∏—Ü—Ü–∞ "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞"
        category:
          type: string
          enum: [vegetables, dairy, meat, frozen, general]
          example: frozen
        quantity:
          type: integer
          example: 1
        expiry_date:
          type: string
          format: date
          example: "2025-10-01"
        container_id:
          type: string
          example: container-freezer
        storage_type:
          type: string
          enum: [fresh, frozen]
          example: frozen
        _links:
          $ref: '#/components/schemas/HALLinks'

    TemperatureSetting:
      type: object
      properties:
        target:
          type: string
          enum: [main, freezer, container]
          example: freezer
        container_id:
          type: string
          example: container-freezer
          nullable: true
        value_celsius:
          type: number
          format: float
          example: -18.5
      required:
        - target
        - value_celsius

    Notification:
      type: object
      properties:
        id:
          type: string
          example: notif-temp-001
        type:
          type: string
          enum: [expiry_warning, temperature_alert, door_left_open]
          example: temperature_alert
        message:
          type: string
          example: "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –º–æ—Ä–æ–∑–∏–ª–∫–µ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ -15¬∞C!"
        severity:
          type: string
          enum: [low, medium, high]
          example: high
        timestamp:
          type: string
          format: date-time
          example: "2025-04-05T10:15:00Z"
        _links:
          $ref: '#/components/schemas/HALLinks'

    HALLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href: { type: string, example: "/containers/container-freezer" }
        collection:
          type: object
          properties:
            href: { type: string, example: "/containers" }
        products:
          type: object
          properties:
            href: { type: string, example: "/products?container_id=container-freezer" }
        temperature:
          type: object
          properties:
            href: { type: string, example: "/temperature?target=freezer&container_id=container-freezer" }

    MetricsResponse:
      type: string
      example: |
        # HELP fridge_door_open_total –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã—Ç–∏–π –¥–≤–µ—Ä–∏
        # TYPE fridge_door_open_total counter
        fridge_door_open_total 42

        # HELP fridge_temperature_celsius –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ –∑–æ–Ω–∞–º
        # TYPE fridge_temperature_celsius gauge
        fridge_temperature_celsius{zone="main"} 4.2
        fridge_temperature_celsius{zone="freezer"} -18.0

        # HELP product_expiry_days –û—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏ –¥–æ –ø—Ä–æ—Å—Ä–æ—á–∫–∏
        # TYPE product_expiry_days gauge
        product_expiry_days{product="–ü–∏—Ü—Ü–∞ \"–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞\""} 168

        # HELP freezer_power_state –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ—Ä–æ–∑–∏–ª–∫–∏ (1=–≤–∫–ª—é—á–µ–Ω–∞)
        # TYPE freezer_power_state gauge
        freezer_power_state 1

  # --- –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ ---
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  security:
    - BearerAuth: []
    - ApiKeyAuth: []

  # --- –ü–†–ò–ú–ï–†–´ ---
  examples:
    PizzaInFreezer:
      summary: –ü–∏—Ü—Ü–∞ –≤ –º–æ—Ä–æ–∑–∏–ª–∫–µ
      value:
        id: product-pizza-01
        name: –ü–∏—Ü—Ü–∞ "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞"
        category: frozen
        quantity: 1
        expiry_date: "2025-10-01"
        container_id: container-freezer
        storage_type: frozen
        _links:
          self: { href: "/products/product-pizza-01" }
          container: { href: "/containers/container-freezer" }

    FreezerContainer:
      summary: –ú–æ—Ä–æ–∑–∏–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞
      value:
        id: container-freezer
        type: freezer
        location: bottom
        access_level: normal
        temperature_celsius: -18.0
        capacity_liters: 50
        is_active: true
        products_count: 1
        _links:
          self: { href: "/containers/container-freezer" }
          products: { href: "/products?container_id=container-freezer" }
          temperature: { href: "/temperature?target=container&container_id=container-freezer" }

    TemperatureChangeEvent:
      summary: –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
      value:
        event: temperature_changed
        data:
          container_id: container-freezer
          previous: -18.0
          current: -17.5
          timestamp: "2025-04-05T10:20:00Z"

  # --- –û–¢–í–ï–¢–´ ---
  responses:
    Success200:
      description: –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Door'
              - $ref: '#/components/schemas/Container'
              - $ref: '#/components/schemas/Product'
    Created201:
      description: –†–µ—Å—É—Ä—Å —Å–æ–∑–¥–∞–Ω
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Product'
              - $ref: '#/components/schemas/Notification'
    NotFound:
      description: –†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: Not Found
            message: "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä container-999 –Ω–µ –Ω–∞–π–¥–µ–Ω"
            status: 404
            path: "/containers/container-999"

  # --- –ó–ê–ü–†–û–°–´ ---
  requestBodies:
    SetTemperature:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemperatureSetting'
          example:
            target: freezer
            value_celsius: -18.5

# === –ü–£–¢–ò ===
paths:
  /doors:
    put:
      tags: [Doors]
      summary: –û—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action: { type: string, enum: [open, close] }
              required: [action]
            example:
              action: open
      responses:
        '200':
          $ref: '#/components/responses/Success200'

  /containers:
    get:
      tags: [Containers]
      summary: –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (–≤–∫–ª—é—á–∞—è –º–æ—Ä–æ–∑–∏–ª–∫—É)
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Container'
              examples:
                WithFreezer:
                  $ref: '#/components/examples/FreezerContainer'

  /containers/{id}:
    get:
      tags: [Containers]
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          $ref: '#/components/responses/Success200'
        '404':
          $ref: '#/components/responses/NotFound'

  /products:
    post:
      tags: [Products]
      summary: –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–∏—Ü—Ü—É)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            examples:
              Pizza:
                $ref: '#/components/examples/PizzaInFreezer'
      responses:
        '201':
          $ref: '#/components/responses/Created201'

  /temperature:
    put:
      tags: [Temperature]
      summary: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
      requestBody:
        $ref: '#/components/requestBodies/SetTemperature'
      responses:
        '200':
          description: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
          content:
            application/json:
              example:
                status: success
                message: "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è freezer —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ -18.5¬∞C"
                timestamp: "2025-04-05T10:20:00Z"

  /events:
    get:
      tags: [Events]
      summary: –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WebSocket –¥–ª—è —Å–æ–±—ã—Ç–∏–π
      description: |
        –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ `wss://api.fridge.com/v1/events`

        –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–æ–±—ã—Ç–∏—è:
        - `door_opened`
        - `door_closed`
        - `temperature_changed`
        - `product_added`
        - `expiry_warning`

        –ü—Ä–∏–º–µ—Ä —Å–æ–±—ã—Ç–∏—è:
        ```json
        {
          "event": "temperature_changed",
          "data": {
            "container_id": "container-freezer",
            "previous": -18.0,
            "current": -17.5,
            "timestamp": "2025-04-05T10:20:00Z"
          }
        }
        ```
      responses:
        '101':
          description: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ WebSocket
        '401':
          description: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ

  /metrics:
    get:
      tags: [Metrics]
      summary: –ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è Prometheus
      description: |
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Prometheus (text/plain).

        –ü—Ä–∏–º–µ—Ä:
        ```
        fridge_door_open_total 42
        fridge_temperature_celsius{zone="freezer"} -18.0
        product_expiry_days{product="–ü–∏—Ü—Ü–∞ \"–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞\""} 168
        ```
      responses:
        '200':
          description: –ú–µ—Ç—Ä–∏–∫–∏ Prometheus
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MetricsResponse'